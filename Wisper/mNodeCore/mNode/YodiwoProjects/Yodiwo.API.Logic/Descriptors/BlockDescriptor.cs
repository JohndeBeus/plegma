using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Reflection;

using Yodiwo.API.Plegma;

namespace Yodiwo.Logic.Descriptors
{
    [Newtonsoft.Json.JsonSafeType]
    public class BlockDescriptor
    {
        #region Variables
        //-------------------------------------------------------------------------------------------------------------------------
        [DB_IgnoreIfDefault]
        public int UID;
        //-------------------------------------------------------------------------------------------------------------------------
        [DB_IgnoreIfDefault]
        public String Name;
        //-------------------------------------------------------------------------------------------------------------------------
        [DB_IgnoreIfDefault]
        public String Description;
        //-------------------------------------------------------------------------------------------------------------------------
        [DB_IgnoreIfDefault]
        public String FriendlyTypeName;
        //-------------------------------------------------------------------------------------------------------------------------
        [DB_IgnoreIfDefault]
        public String Type;
        //-------------------------------------------------------------------------------------------------------------------------
        [DB_IgnoreIfDefault]
        public String FriendlyImageSource;
        //-------------------------------------------------------------------------------------------------------------------------
        [DoNotStoreInDB]
        public String Category;
        //-------------------------------------------------------------------------------------------------------------------------
        [DB_IgnoreIfDefault]
        public String UniqueAccountId;
        //-------------------------------------------------------------------------------------------------------------------------
        // need for ordering in the stencil
        [DoNotStoreInDB]
        public int CategoryIndex;
        //-------------------------------------------------------------------------------------------------------------------------
        [DB_IgnoreIfDefault]
        [DB_IgnoreIfEmpty]
        public IODescriptor[] Inputs;
        //-------------------------------------------------------------------------------------------------------------------------
        [DB_IgnoreIfDefault]
        [DB_IgnoreIfEmpty]
        public IODescriptor[] Outputs;
        //-------------------------------------------------------------------------------------------------------------------------
        [DB_IgnoreIfDefault]
        [DB_IgnoreIfEmpty]
        public IOCategoryDescriptor[] IOCategories;
        //-------------------------------------------------------------------------------------------------------------------------
        [DB_IgnoreIfDefault]
        public float X;
        //-------------------------------------------------------------------------------------------------------------------------
        [DB_IgnoreIfDefault]
        public float Y;
        //-------------------------------------------------------------------------------------------------------------------------
        [DB_IgnoreIfDefault]
        public float Width;
        //-------------------------------------------------------------------------------------------------------------------------
        [DB_IgnoreIfDefault]
        public float Height;
        //-------------------------------------------------------------------------------------------------------------------------
        [DB_IgnoreIfDefault]
        public int Angle;
        //-------------------------------------------------------------------------------------------------------------------------
        [DB_IgnoreIfDefault]
        public PropertyDescriptor Properties;
        //-------------------------------------------------------------------------------------------------------------------------
        [DB_IgnoreIfDefault]
        public bool IsThing;
        //-------------------------------------------------------------------------------------------------------------------------
        [DB_IgnoreIfDefault]
        public bool IsOwnThing;
        //-------------------------------------------------------------------------------------------------------------------------
        [DB_IgnoreIfDefault]
        public string ThingKey;
        //-------------------------------------------------------------------------------------------------------------------------
        [DB_IgnoreIfDefault]
        public string GroupKey;
        //-------------------------------------------------------------------------------------------------------------------------
        [DB_IgnoreIfDefault]
        public bool IsGroup;
        //-------------------------------------------------------------------------------------------------------------------------
        // maybe we share groups too in the future
        [DB_IgnoreIfDefault]
        public bool IsOwnGroup;
        //-------------------------------------------------------------------------------------------------------------------------
        [DB_IgnoreIfDefault]
        public bool IsRestService;
        //-------------------------------------------------------------------------------------------------------------------------
        [DB_IgnoreIfDefault]
        public bool IsMacroBlock;
        //-------------------------------------------------------------------------------------------------------------------------
        #endregion

        #region Constructors
        //-------------------------------------------------------------------------------------------------------------------------
        public BlockDescriptor() { }
        //-------------------------------------------------------------------------------------------------------------------------
        #endregion

        #region Functions
        //-------------------------------------------------------------------------------------------------------------------------
        public override string ToString()
        {
            return $"BlockDescriptor {Name} ({FriendlyTypeName})";
        }
        //-------------------------------------------------------------------------------------------------------------------------
        public bool FunctionallyEqual(BlockDescriptor other)
        {
            var me = (BlockDescriptor)MemberwiseClone();
            me.X = 0;
            me.Y = 0;
            BlockDescriptor you = (BlockDescriptor)other.MemberwiseClone();
            you.X = 0;
            you.Y = 0;
            return (me.ToJSON(HtmlEncode: false) == you.ToJSON(HtmlEncode: false));
        }
        //-------------------------------------------------------------------------------------------------------------------------
        #endregion
    }
}